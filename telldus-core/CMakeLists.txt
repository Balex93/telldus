PROJECT( telldus-core )

CMAKE_MINIMUM_REQUIRED( VERSION 2.6.0 )

CMAKE_POLICY(SET CMP0003 NEW)

SET(PACKAGE_MAJOR_VERSION 2)
SET(PACKAGE_MINOR_VERSION 0)
SET(PACKAGE_PATCH_VERSION 200)
SET(PACKAGE_VERSION "${PACKAGE_MAJOR_VERSION}.${PACKAGE_MINOR_VERSION}.${PACKAGE_PATCH_VERSION}")
SET(PACKAGE_SUBVERSION)
SET(PACKAGE_SOVERSION 2)

IF (PACKAGE_SUBVERSION)
  SET(DISPLAYED_VERSION "${PACKAGE_VERSION}_${PACKAGE_SUBVERSION}")
ELSE (PACKAGE_SUBVERSION)
  SET(DISPLAYED_VERSION ${PACKAGE_VERSION})
ENDIF(PACKAGE_SUBVERSION)

SET(BUILD_LIBTELLDUS-CORE	TRUE	CACHE BOOL "Build libtelldus-core")

SET(USE_QT_SETTINGS_BACKEND FALSE CACHE BOOL "Use QT as settings backend instead of the native one")
IF (WIN32)
	SET(SIGN_FILES FALSE CACHE BOOL "Sign the generated files. This requires a certificate to be installed on the computer!")
ENDIF (WIN32)

SET(BUILD_RFCMD		FALSE	CACHE BOOL "Build rfcmd")

SET(BUILD_TDTOOL	TRUE	CACHE BOOL "Build tdtool")

SET(GENERATE_MAN	FALSE	CACHE	BOOL "Enable generation of man-files")

# Lets figure if we need to build against Qt or not
IF(USE_QT_SETTINGS_BACKEND)
	SET(BUILD_WITH_QT TRUE)
ENDIF(USE_QT_SETTINGS_BACKEND)

# ADD_SUBDIRECTORY(common)
# ADD_SUBDIRECTORY(service)
# ADD_SUBDIRECTORY(client)

IF(BUILD_TDTOOL)
# 	ADD_SUBDIRECTORY(tdtool)
ENDIF(BUILD_TDTOOL)

IF(BUILD_RFCMD)
# 	ADD_SUBDIRECTORY(rfcmd)
ENDIF(BUILD_RFCMD)
